library(pROC)
library(caret)
library(e1071)
library(Boruta)
library(Rcpp)
library(randomForest)
library(ROSE)
library(ggcorrplot)
library(party)
numeric <- read_csv("Data/data_numeric.csv", show_col_types = T)
spec(numeric)
categorical <- read_csv("Data/data_categorical.csv", show_col_types = T)
spec(categorical)
ordinal <- read_csv("Data/data_ordinal.csv", show_col_types = T)
spec(ordinal)
num_ord <- left_join(numeric, ordinal, "PERSONID")
num_ord_cat <- left_join(num_ord, categorical, "PERSONID")
spec(num_ord_cat)
data1 <- num_ord_cat %>%
select(starts_with("DIABET") | starts_with("MARITAL")) %>%
mutate(DIABET3_diff = ifelse(DIABETE3.x == DIABETE3.y &
DIABETE3.x == `DIABETE3...2` &
DIABETE3.x == `DIABETE3...20`, 0, 1)) %>%
## There are 10 NA values in the marital difference variable-- want to see if they are missing for the same observations
mutate(MARITAL_DIFF = ifelse((`MARITAL...8` == `MARITAL...23`) |
(is.na(`MARITAL...8`) & is.na(`MARITAL...23`)), 0 ,1))
data2 <- num_ord_cat %>%
select(-c(DIABETE3.y, `DIABETE3...2`, `DIABETE3...20`, `MARITAL...8`)) %>%
janitor::clean_names()
data3 <- data2 %>%
replace_with_na(replace = list(weight2 = c(9999, 7777),
children = 99,
drvisits = c(77, 99),
income2 = c(77, 99),
checkup1 = c(7, 9),
sleptim1 = c(77, 99),
menthlth = c(77, 99),
diabete3_x = c(7, 9),
race = c(6, 9),
flushot6 = c(7, 9),
employ1 = 9,
marital_23 = 9,
cvdcrhd4 = c(7, 9),
hlthcvr1 = c(77, 99),
chckidny = c(7, 9),
useequip = c(7, 9),
totinda = 9,
addepev2 = c(7, 9),
renthom1 = c(7, 9),
exerany2 = c(7, 9),
blind = c(7, 9),
decide = c(7, 9),
hlthpln1 = c(7, 9),
genhlth = c(7, 9),
asthma3 = c(7, 9)))%>%
mutate(children = replace(children, children == 88, 0)) %>%
mutate(drvisits = replace(drvisits, drvisits == 88, 0)) %>%
mutate(menthlth = replace(menthlth, menthlth == 88, 0)) %>%
mutate(checkup1 = replace(checkup1, checkup1 == 88, 0)) %>%
mutate(marital = marital_23) %>%
mutate(diabete3 = diabete3_x) %>%
select(-c(marital_23, diabete3_x))
data3_cleanweight1 <- data3 %>%
mutate(
weight_correct = case_when(
nchar(as.character(weight2))==4 ~ as.numeric(str_sub(weight2, -3)) * 2.20462,
TRUE ~ weight2
)) %>%
select(-weight2)
# data3_cleanweight1$state <- fips(data3_cleanweight1$state, to="Abbreviation")
uniqueidcheck <- data3_cleanweight1 %>%
group_by(personid) %>%
mutate(duplicate_name = n()-1)
# All ID's are unique!
vis_dat(data3_cleanweight1)
data4 <- data3_cleanweight1 %>%
select(-c(numadult, drvisits, mscode, income2, hlthcvr1)) %>%
filter(ageg5yr > 2) %>%
# The US Preventative Service Task Force recommends that screenings for diabetes should start at age 35, so we only include individuals 35 or older.
filter(diabete3 == 1 | diabete3 == 3) %>%
#We are not interested in anyone with gestational diabetes or prediabetic individuals because they are not official diabetes diagnoses. Even if we were interested in keeping gestational diabetes or prediabetes as covariates, we could not use them because it is unknown of those respondents have type 2 diagnoses later.
mutate(diabete3 = case_when(diabete3 == 3 ~ 0,
TRUE ~ 1)) %>%
na.omit()
# After this modification, we have 3609 observations
data4_sample <- data4 %>%
group_by(race) %>%
mutate(Freq=n()) %>%
mutate(perc_total_respondents = Freq/3808*100) %>%
# Compare perc_total_respondents with actual national racial breakdown using https://www.census.gov/content/dam/Census/library/publications/2015/demo/p25-1143.pdf page 9
# There are a disproportionate number of white respondents, which could potentially skew the sample
# We use weights to fix for heteroskedasticity AFTER establishing the training and test models because the representative-ness will change based on the random sample
ungroup()
data4_sample$diabete3 <- factor(data4_sample$diabete3)
data4_sample$race <- factor(data4_sample$race)
data4_sample$sex <- factor(data4_sample$sex)
data4_sample$ageg5yr <- factor(data4_sample$ageg5yr)
data4_sample$bmi5cat <- factor(data4_sample$bmi5cat)
data4_sample$smoker3 <- factor(data4_sample$smoker3)
data4_sample$addepev2 <- factor(data4_sample$addepev2)
data4_sample$cvdcrhd4 <- factor(data4_sample$cvdcrhd4)
data4_sample$chckidny <- factor(data4_sample$chckidny)
data4_sample$totinda <- factor(data4_sample$totinda)
data4_sample$genhlth <- factor(data4_sample$genhlth)
data4_sample$employ1 <- factor(data4_sample$employ1)
data4_sample$useequip <- factor(data4_sample$useequip)
data4_sample$asthma3 <- factor(data4_sample$asthma3)
data4_sample$hlthpln1 <- factor(data4_sample$hlthpln1)
data4_sample$decide <- factor(data4_sample$decide)
data4_sample$blind <- factor(data4_sample$blind)
data4_sample$exerany2 <- factor(data4_sample$exerany2)
data4_sample$renthom1 <- factor(data4_sample$renthom1)
prop.table(table(data4_sample$diabete3))
boruta_data <- data4_sample %>%
select(-c(Freq, perc_total_respondents, personid,weight_correct))
#Omit varialbes that we don't intend on using in our model
boruta.train <- Boruta(diabete3~., data = boruta_data)
print(boruta.train)
getSelectedAttributes(boruta.train, withTentative = F)
getSelectedAttributes(boruta.train, withTentative = T)
# Confirmed factors: "children" "genhlth"  "ageg5yr"  "bmi5cat" "checkup1" "educag"   "sleptim1" "menthlth" "race"     "employ1"  "cvdcrhd4" "chckidny" "totinda" "useequip" "addepev2" "exerany2" "decide" "marital"
# Tentative factors: "smoker3"  "renthom1"
without_tentative <- getSelectedAttributes(boruta.train, withTentative = F)
with_tentative <- getSelectedAttributes(boruta.train, withTentative = T)
model.matrix(~0+.-Freq-perc_total_respondents-personid-state, data=data4_sample) %>%
cor(use="pairwise.complete.obs") %>%
ggcorrplot(show.diag = F, type="lower", lab=TRUE, lab_size=2)
model.matrix(~0+.-Freq-perc_total_respondents-personid-state, data=data4_sample) %>%
cor(use="pairwise.complete.obs") %>%
ggcorrplot(show.diag = F, type="lower", lab=TRUE, lab_size=2)
children_hist <- ggplot(data5, aes(x=children)) + geom_histogram()
children_hist <- ggplot(data4_sample, aes(x=children)) + geom_histogram()
genhlth_hist <- ggplot(data4_sample, aes(x=genhlth)) + geom_bar()
ageg5yr_hist <- ggplot(data4_sample, aes(x=ageg5yr)) + geom_bar()
bmi5cat_hist <- ggplot(data4_sample, aes(x=bmi5cat)) + geom_bar()
checkup_hist <- ggplot(data4_sample, aes(x=checkup1)) + geom_bar()
educag_hist <- ggplot(data4_sample, aes(x=educag)) + geom_bar()+
scale_x_discrete(breaks=c(1, 2, 3, 4, 5, 6, 7, 8, 9))
sleptim_hist <- ggplot(data4_sample, aes(x=sleptim1)) + geom_histogram()
menthlth_hist <- ggplot(data4_sample, aes(x=menthlth)) + geom_histogram(bins=45)
employ1_hist <- ggplot(data4_sample, aes(x=employ1)) + geom_bar()
cvdcrhd4_table <- table(data4_sample$cvdcrhd4)
chckidny_table <- table(data4_sample$chckidny)
useequip_table <- table(data4_sample$useequip)
addepev2_table <- table(data4_sample$addepev2)
exerany_table <- table(data4_sample$exerany2)
decide_table <- table(data4_sample$decide)
marital_hist <- ggplot(data4_sample, aes(x=marital)) + geom_bar()
sex_table <- table(data4_sample$sex)
smoker3_hist <- ggplot(data4_sample, aes(x=smoker3)) + geom_bar()
totinda_table <- table(data4_sample$totinda)
grid.arrange(children_hist, genhlth_hist, ageg5yr_hist, bmi5cat_hist, checkup_hist, educag_hist, sleptim_hist, menthlth_hist,employ1_hist, marital_hist, smoker3_hist, ncol=3, nrow =4)
library(ggplot2)
library(ggplot2)
grid.arrange(children_hist, genhlth_hist, ageg5yr_hist, bmi5cat_hist, checkup_hist, educag_hist, sleptim_hist, menthlth_hist,employ1_hist, marital_hist, smoker3_hist, ncol=3, nrow =4)
library(gridExtra)
grid.arrange(children_hist, genhlth_hist, ageg5yr_hist, bmi5cat_hist, checkup_hist, educag_hist, sleptim_hist, menthlth_hist,employ1_hist, marital_hist, smoker3_hist, ncol=3, nrow =4)
train <- data4_sample %>%
dplyr::sample_frac(0.75) %>%
group_by(race) %>%
mutate(perc_population = case_when(race == 1 ~  77.5,
race == 2 ~ 13.2,
race == 3 ~ 1.2,
race == 4 ~ 5.4,
race == 5 ~ 0.2,
race == 7 ~ 2.5,
TRUE~15.3)) %>%
## Used https://www.census.gov/content/dam/Census/library/publications/2015/demo/p25-1143.pdf page 9
## subtracted 2.1 from the hispanic because we have 17.4 percent hispanic and that is not ONLY hispanic
mutate(race_weight = perc_population/perc_total_respondents) %>%
select(-c(perc_population, perc_total_respondents, Freq)) %>%
ungroup()
prop.table(table(train$diabete3))
# Creating test sample-- still need to create a racially representative sample here as well before testing the model we created
test  <- dplyr::anti_join(data4_sample, train, by = 'personid') %>%
group_by(race) %>%
mutate(Freq=n()) %>%
mutate(perc_total_respondents = Freq/3808*100) %>%
mutate(perc_population = case_when(race == 1 ~  77.5,
race == 2 ~ 13.2,
race == 3 ~ 1.2,
race == 4 ~ 5.4,
race == 5 ~ 0.2,
race == 7 ~ 2.5,
TRUE~15.3)) %>%
# Used https://www.census.gov/content/dam/Census/library/publications/2015/demo/p25-1143.pdf page 9
# subtracted 2.1 from the hispanic because we have 17.4 percent hispanic and that is not ONLY hispanic
mutate(race_weight = perc_population/perc_total_respondents) %>%
select(-c(perc_population, perc_total_respondents, Freq)) %>%
ungroup()
prop.table(table(test$diabete3))
with_tentative
mylogit <- glm(diabete3 ~., data = data4_sample[, c('diabete3', getSelectedAttributes(boruto.train, withTentative = T))], family = binomial(link = "logit"), weights = race_weight)
mylogit <- glm(diabete3 ~., data = data4_sample[, c('diabete3', getSelectedAttributes(boruta.train, withTentative = T))], family = binomial(link = "logit"), weights = race_weight)
train <- data4_sample[, c('diabete3', getSelectedAttributes(boruta.train, withTentative = T))] %>%
dplyr::sample_frac(0.75) %>%
group_by(race) %>%
mutate(perc_population = case_when(race == 1 ~  77.5,
race == 2 ~ 13.2,
race == 3 ~ 1.2,
race == 4 ~ 5.4,
race == 5 ~ 0.2,
race == 7 ~ 2.5,
TRUE~15.3)) %>%
## Used https://www.census.gov/content/dam/Census/library/publications/2015/demo/p25-1143.pdf page 9
## subtracted 2.1 from the hispanic because we have 17.4 percent hispanic and that is not ONLY hispanic
mutate(race_weight = perc_population/perc_total_respondents) %>%
select(-c(perc_population, perc_total_respondents, Freq)) %>%
ungroup()
mylogit <- glm(diabete3 ~., data = train, family = binomial(link = "logit"), weights = race_weight)
with_tentative
mylogit <- glm(diabete3 ~children+genhlth+ageg5yr+bmi5cat+checkup1+educag+sleptim1+menthlth+race+employ1+cvdcrhd4+chckidny+useequip+addepev2+exerany2+decide+marital+sex+smoker3, data = train, family = binomial(link = "logit"), weights = race_weight)
mylogit <- glm(diabete3 ~children+genhlth+ageg5yr+bmi5cat+checkup1+educag+sleptim1+menthlth+race+employ1+cvdcrhd4+chckidny+useequip+addepev2+exerany2+decide+marital+sex+smoker3, data = train, family = binomial(link = "logit"), weights = race_weight)
anova_logit <- anova(mylogit, test="Chisq")
# Use a chi-squared test because we have a lot of categorical and ordinal variables. The p values we have in the regression output correspond to individual Wald tests, but those p values do not tell us if the entire categorical/ordinal variable) explains the probability of getting diabetes. We have to test the coefficients together, so we perform a deviance goodness of fit test.
anova_logit <- anova(mylogit, test="Chisq")
# Use a chi-squared test because we have a lot of categorical and ordinal variables. The p values we have in the regression output correspond to individual Wald tests, but those p values do not tell us if the entire categorical/ordinal variable) explains the probability of getting diabetes. We have to test the coefficients together, so we perform a deviance goodness of fit test.
anova_logit
probabilities <- mylogit %>% predict(test, type = "response")
# The result is continuous values of probabilities of diabetes occurrence, but we are interested in predicting if someone will have diabetes or not. If anyone has a probability above 50%, we assume that they will be diagnosed with diabetes.
predicted_classes <- ifelse(probabilities > 0.5, 1, 0)
# Take the predictions and append as a column to the test dataframe to create a confusion matrix
# Do do that, we must first converting predicted classes to a dataframe
predicted_classes_logit <- as.data.frame(predicted_classes)
test_predicted_logit <- cbind(predicted_classes_logit, test)
logitconfusionmatrix <-confusionMatrix(data=as.factor(test_predicted_logit$predicted_classes), reference=as.factor(test_predicted_logit$diabete3))
logitconfusionmatrix <-confusionMatrix(data=as.factor(test_predicted_logit$predicted_classes), reference=as.factor(test_predicted_logit$diabete3))
logitconfusionmatrix
roc_object <- roc(test$diabete3, probabilities)
# Calculate area under curve, the closer this is to 1 the more useful the model is
auc_logit <- auc(roc_object)
auc_logit
decisiontree <- ctree(diabete3 ~children+genhlth+ageg5yr+bmi5cat+checkup1+educag+sleptim1+menthlth+race+employ1+cvdcrhd4+chckidny+useequip+addepev2+exerany2+decide+marital+sex+smoker3, data = train)
grid.arrange(children_hist, genhlth_hist, ageg5yr_hist, bmi5cat_hist, checkup_hist, educag_hist, sleptim_hist, menthlth_hist,employ1_hist, marital_hist, smoker3_hist, ncol=3, nrow =4)
grid.arrange(children_hist, genhlth_hist, ageg5yr_hist, bmi5cat_hist, checkup_hist, educag_hist, sleptim_hist, menthlth_hist,employ1_hist, marital_hist, smoker3_hist, ncol=3, nrow =4)
knitr::opts_chunk$set(echo = TRUE)
### Importing libraries
library(dplyr, warn.conflicts = FALSE)
library(tidyr)
library(tidyverse)
library(tidylog, warn.conflicts = FALSE)
library(visdat)
library(naniar)
library(cdlTools)
library(pROC)
library(caret)
library(e1071)
library(Boruta)
library(Rcpp)
library(randomForest)
library(ROSE)
library(ggcorrplot)
library(party)
library(gridExtra)
# data3_cleanweight1$state <- fips(data3_cleanweight1$state, to="Abbreviation")
corr(data3_cleanweight1$diabete3, data3_cleanweight1$state)
install.packages('corr')
install.packages('corrr')
library(corrr)
# data3_cleanweight1$state <- fips(data3_cleanweight1$state, to="Abbreviation")
corr(data3_cleanweight1$diabete3, data3_cleanweight1$state)
# data3_cleanweight1$state <- fips(data3_cleanweight1$state, to="Abbreviation")
corrr(data3_cleanweight1$diabete3, data3_cleanweight1$state)
# data3_cleanweight1$state <- fips(data3_cleanweight1$state, to="Abbreviation")
corr(data3_cleanweight1$diabete3, data3_cleanweight1$state)
library(corrr)
# data3_cleanweight1$state <- fips(data3_cleanweight1$state, to="Abbreviation")
corr(data3_cleanweight1$diabete3, data3_cleanweight1$state)
# data3_cleanweight1$state <- fips(data3_cleanweight1$state, to="Abbreviation")
cor(data3_cleanweight1$diabete3, data3_cleanweight1$state)
# data3_cleanweight1$state <- fips(data3_cleanweight1$state, to="Abbreviation")
cov(data3_cleanweight1$diabete3, data3_cleanweight1$state)
without_tentative <- getSelectedAttributes(boruta.train, withTentative = F)
with_tentative
table(data4_sample$state)
ggplot(data4_sample, aes(x=state)) + geom_bar()
data4_sample$state <- factor(data4_sample$state)
train <- data4_sample %>%
dplyr::sample_frac(0.75) %>%
group_by(race) %>%
mutate(perc_population = case_when(race == 1 ~  77.5,
race == 2 ~ 13.2,
race == 3 ~ 1.2,
race == 4 ~ 5.4,
race == 5 ~ 0.2,
race == 7 ~ 2.5,
TRUE~15.3)) %>%
## Used https://www.census.gov/content/dam/Census/library/publications/2015/demo/p25-1143.pdf page 9
## subtracted 2.1 from the hispanic because we have 17.4 percent hispanic and that is not ONLY hispanic
mutate(race_weight = perc_population/perc_total_respondents) %>%
select(-c(perc_population, perc_total_respondents, Freq)) %>%
ungroup()
prop.table(table(train$diabete3))
# Creating test sample-- still need to create a racially representative sample here as well before testing the model we created
test  <- dplyr::anti_join(data4_sample, train, by = 'personid') %>%
group_by(race) %>%
mutate(Freq=n()) %>%
mutate(perc_total_respondents = Freq/3808*100) %>%
mutate(perc_population = case_when(race == 1 ~  77.5,
race == 2 ~ 13.2,
race == 3 ~ 1.2,
race == 4 ~ 5.4,
race == 5 ~ 0.2,
race == 7 ~ 2.5,
TRUE~15.3)) %>%
# Used https://www.census.gov/content/dam/Census/library/publications/2015/demo/p25-1143.pdf page 9
# subtracted 2.1 from the hispanic because we have 17.4 percent hispanic and that is not ONLY hispanic
mutate(race_weight = perc_population/perc_total_respondents) %>%
select(-c(perc_population, perc_total_respondents, Freq)) %>%
ungroup()
knitr::opts_chunk$set(echo = TRUE)
### Importing libraries
library(dplyr, warn.conflicts = FALSE)
library(tidyr)
library(tidyverse)
library(tidylog, warn.conflicts = FALSE)
library(visdat)
library(naniar)
library(cdlTools)
library(pROC)
library(caret)
library(e1071)
library(Boruta)
library(Rcpp)
library(randomForest)
library(ROSE)
library(ggcorrplot)
library(party)
library(gridExtra)
numeric <- read_csv("Data/data_numeric.csv", show_col_types = T)
spec(numeric)
categorical <- read_csv("Data/data_categorical.csv", show_col_types = T)
spec(categorical)
ordinal <- read_csv("Data/data_ordinal.csv", show_col_types = T)
spec(ordinal)
num_ord <- left_join(numeric, ordinal, "PERSONID")
num_ord_cat <- left_join(num_ord, categorical, "PERSONID")
spec(num_ord_cat)
data1 <- num_ord_cat %>%
select(starts_with("DIABET") | starts_with("MARITAL")) %>%
mutate(DIABET3_diff = ifelse(DIABETE3.x == DIABETE3.y &
DIABETE3.x == `DIABETE3...2` &
DIABETE3.x == `DIABETE3...20`, 0, 1)) %>%
## There are 10 NA values in the marital difference variable-- want to see if they are missing for the same observations
mutate(MARITAL_DIFF = ifelse((`MARITAL...8` == `MARITAL...23`) |
(is.na(`MARITAL...8`) & is.na(`MARITAL...23`)), 0 ,1))
data2 <- num_ord_cat %>%
select(-c(DIABETE3.y, `DIABETE3...2`, `DIABETE3...20`, `MARITAL...8`)) %>%
janitor::clean_names()
data3 <- data2 %>%
replace_with_na(replace = list(weight2 = c(9999, 7777),
children = 99,
drvisits = c(77, 99),
income2 = c(77, 99),
checkup1 = c(7, 9),
sleptim1 = c(77, 99),
menthlth = c(77, 99),
diabete3_x = c(7, 9),
race = c(6, 9),
flushot6 = c(7, 9),
employ1 = 9,
marital_23 = 9,
cvdcrhd4 = c(7, 9),
hlthcvr1 = c(77, 99),
chckidny = c(7, 9),
useequip = c(7, 9),
totinda = 9,
addepev2 = c(7, 9),
renthom1 = c(7, 9),
exerany2 = c(7, 9),
blind = c(7, 9),
decide = c(7, 9),
hlthpln1 = c(7, 9),
genhlth = c(7, 9),
asthma3 = c(7, 9)))%>%
mutate(children = replace(children, children == 88, 0)) %>%
mutate(drvisits = replace(drvisits, drvisits == 88, 0)) %>%
mutate(menthlth = replace(menthlth, menthlth == 88, 0)) %>%
mutate(checkup1 = replace(checkup1, checkup1 == 88, 0)) %>%
mutate(marital = marital_23) %>%
mutate(diabete3 = diabete3_x) %>%
select(-c(marital_23, diabete3_x))
data3_cleanweight1 <- data3 %>%
mutate(
weight_correct = case_when(
nchar(as.character(weight2))==4 ~ as.numeric(str_sub(weight2, -3)) * 2.20462,
TRUE ~ weight2
)) %>%
select(-weight2)
uniqueidcheck <- data3_cleanweight1 %>%
group_by(personid) %>%
mutate(duplicate_name = n()-1)
# All ID's are unique!
vis_dat(data3_cleanweight1)
data4 <- data3_cleanweight1 %>%
select(-c(numadult, drvisits, mscode, income2, hlthcvr1)) %>%
filter(ageg5yr > 2) %>%
# The US Preventative Service Task Force recommends that screenings for diabetes should start at age 35, so we only include individuals 35 or older.
filter(diabete3 == 1 | diabete3 == 3) %>%
#We are not interested in anyone with gestational diabetes or prediabetic individuals because they are not official diabetes diagnoses. Even if we were interested in keeping gestational diabetes or prediabetes as covariates, we could not use them because it is unknown of those respondents have type 2 diagnoses later.
mutate(diabete3 = case_when(diabete3 == 3 ~ 0,
TRUE ~ 1)) %>%
na.omit()
# After this modification, we have 3609 observations
data4_sample <- data4 %>%
group_by(race) %>%
mutate(Freq=n()) %>%
mutate(perc_total_respondents = Freq/3808*100) %>%
# Compare perc_total_respondents with actual national racial breakdown using https://www.census.gov/content/dam/Census/library/publications/2015/demo/p25-1143.pdf page 9
# There are a disproportionate number of white respondents, which could potentially skew the sample
# We use weights to fix for heteroskedasticity AFTER establishing the training and test models because the representative-ness will change based on the random sample
ungroup()
data4_sample$diabete3 <- factor(data4_sample$diabete3)
data4_sample$race <- factor(data4_sample$race)
data4_sample$sex <- factor(data4_sample$sex)
data4_sample$ageg5yr <- factor(data4_sample$ageg5yr)
data4_sample$bmi5cat <- factor(data4_sample$bmi5cat)
data4_sample$smoker3 <- factor(data4_sample$smoker3)
data4_sample$addepev2 <- factor(data4_sample$addepev2)
data4_sample$cvdcrhd4 <- factor(data4_sample$cvdcrhd4)
data4_sample$chckidny <- factor(data4_sample$chckidny)
data4_sample$totinda <- factor(data4_sample$totinda)
data4_sample$genhlth <- factor(data4_sample$genhlth)
data4_sample$employ1 <- factor(data4_sample$employ1)
data4_sample$useequip <- factor(data4_sample$useequip)
data4_sample$asthma3 <- factor(data4_sample$asthma3)
data4_sample$hlthpln1 <- factor(data4_sample$hlthpln1)
data4_sample$decide <- factor(data4_sample$decide)
data4_sample$blind <- factor(data4_sample$blind)
data4_sample$exerany2 <- factor(data4_sample$exerany2)
data4_sample$renthom1 <- factor(data4_sample$renthom1)
data4_sample$state <- factor(data4_sample$state)
prop.table(table(data4_sample$diabete3))
boruta_data <- data4_sample %>%
select(-c(Freq, perc_total_respondents, personid,weight_correct))
#Omit varialbes that we don't intend on using in our model
boruta.train <- Boruta(diabete3~., data = boruta_data)
# Confirmed, non-tentative: The following variables are predictive and should be kept.
# children, genhlth, ageg5yr,bmi5cat, educag, sleptim1, menthlth, race, employ1, cvdcrhd4, chckidny, useequip, addepev2, exerany2, decide, marital, sex
# Tentative. The algorithm was indecisive about if these are predictive. It is up to us to include.
# checkup1, smoker3, totinda
model.matrix(~0+.-Freq-perc_total_respondents-personid-state, data=data4_sample) %>%
cor(use="pairwise.complete.obs") %>%
ggcorrplot(show.diag = F, type="lower", lab=TRUE, lab_size=2)
# Given the figure, omit totinda
# No physical activity in the past 30 days is 100% correlated with no physical exercise in the past 30 days. Because totinda is a tentative attribute according to the Boruta algorithm, we opt to use exerany.
children_hist <- ggplot(data4_sample, aes(x=children)) + geom_histogram()
genhlth_hist <- ggplot(data4_sample, aes(x=genhlth)) + geom_bar()
ageg5yr_hist <- ggplot(data4_sample, aes(x=ageg5yr)) + geom_bar()
bmi5cat_hist <- ggplot(data4_sample, aes(x=bmi5cat)) + geom_bar()
checkup_hist <- ggplot(data4_sample, aes(x=checkup1)) + geom_bar()
educag_hist <- ggplot(data4_sample, aes(x=educag)) + geom_bar()+
scale_x_discrete(breaks=c(1, 2, 3, 4, 5, 6, 7, 8, 9))
sleptim_hist <- ggplot(data4_sample, aes(x=sleptim1)) + geom_histogram()
menthlth_hist <- ggplot(data4_sample, aes(x=menthlth)) + geom_histogram(bins=45)
employ1_hist <- ggplot(data4_sample, aes(x=employ1)) + geom_bar()
cvdcrhd4_table <- table(data4_sample$cvdcrhd4)
chckidny_table <- table(data4_sample$chckidny)
useequip_table <- table(data4_sample$useequip)
addepev2_table <- table(data4_sample$addepev2)
exerany_table <- table(data4_sample$exerany2)
decide_table <- table(data4_sample$decide)
marital_hist <- ggplot(data4_sample, aes(x=marital)) + geom_bar()
sex_table <- table(data4_sample$sex)
smoker3_hist <- ggplot(data4_sample, aes(x=smoker3)) + geom_bar()
totinda_table <- table(data4_sample$totinda)
grid.arrange(children_hist, genhlth_hist, ageg5yr_hist, bmi5cat_hist, checkup_hist, educag_hist, sleptim_hist, menthlth_hist,employ1_hist, marital_hist, smoker3_hist, ncol=3, nrow =4)
train <- data4_sample %>%
dplyr::sample_frac(0.75) %>%
group_by(race) %>%
mutate(perc_population = case_when(race == 1 ~  77.5,
race == 2 ~ 13.2,
race == 3 ~ 1.2,
race == 4 ~ 5.4,
race == 5 ~ 0.2,
race == 7 ~ 2.5,
TRUE~15.3)) %>%
## Used https://www.census.gov/content/dam/Census/library/publications/2015/demo/p25-1143.pdf page 9
## subtracted 2.1 from the hispanic because we have 17.4 percent hispanic and that is not ONLY hispanic
mutate(race_weight = perc_population/perc_total_respondents) %>%
select(-c(perc_population, perc_total_respondents, Freq)) %>%
ungroup()
prop.table(table(train$diabete3))
# Creating test sample-- still need to create a racially representative sample here as well before testing the model we created
test  <- dplyr::anti_join(data4_sample, train, by = 'personid') %>%
group_by(race) %>%
mutate(Freq=n()) %>%
mutate(perc_total_respondents = Freq/3808*100) %>%
mutate(perc_population = case_when(race == 1 ~  77.5,
race == 2 ~ 13.2,
race == 3 ~ 1.2,
race == 4 ~ 5.4,
race == 5 ~ 0.2,
race == 7 ~ 2.5,
TRUE~15.3)) %>%
# Used https://www.census.gov/content/dam/Census/library/publications/2015/demo/p25-1143.pdf page 9
# subtracted 2.1 from the hispanic because we have 17.4 percent hispanic and that is not ONLY hispanic
mutate(race_weight = perc_population/perc_total_respondents) %>%
select(-c(perc_population, perc_total_respondents, Freq)) %>%
ungroup()
prop.table(table(test$diabete3))
mylogit <- glm(diabete3 ~children+genhlth+ageg5yr+bmi5cat+checkup1+educag+sleptim1+menthlth+race+employ1+cvdcrhd4+chckidny+useequip+addepev2+exerany2+decide+marital+sex+smoker3+state, data = train, family = binomial(link = "logit"), weights = race_weight)
summary(mylogit)
